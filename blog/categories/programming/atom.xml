<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | /home/andreas]]></title>
  <link href="http://aprell.github.io/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://aprell.github.io/"/>
  <updated>2014-12-21T19:09:01+01:00</updated>
  <id>http://aprell.github.io/</id>
  <author>
    <name><![CDATA[Andreas Prell]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Lua Gotchas]]></title>
    <link href="http://aprell.github.io/blog/2014/12/21/lua-gotchas/"/>
    <updated>2014-12-21T18:26:15+01:00</updated>
    <id>http://aprell.github.io/blog/2014/12/21/lua-gotchas</id>
    <content type="html"><![CDATA[<p>Lua is one of my favorite programming languages. Lua is easy to learn, but not
entirely without <a href="http://www.luafaq.org/gotchas.html">gotchas</a> if you&rsquo;re used to other languages. One gotcha is
related to for-loops. What do you think the following piece of code will
print?</p>

<!--more-->


<pre><code class="lua">for i = 1, 5 do
    print(i)
    if i == 3 then i = i + 1 end
end
</code></pre>

<p>The numbers from one to five except four? Because that&rsquo;s what the equivalent
loop in C++ would print:</p>

<pre><code class="c++">for (int i = 1; i &lt;= 5; i++) {
    std::cout &lt;&lt; i &lt;&lt; std::endl;
    if (i == 3) i++;
}
</code></pre>

<p>Except it&rsquo;s not equivalent. Lua&rsquo;s for-loops are implemented in terms of while.
Above example is translated to:</p>

<pre><code class="lua">do
    local _i, _end, _step = 1, 5, 1
    while _i &lt;= _end do
        local i = _i
        print(i)
        if i == 3 then i = i + 1 end
        _i = _i + _step
    end
end
</code></pre>

<p>Quoting from <a href="http://www.lua.org/pil/4.3.4.html">Programming in Lua</a>:</p>

<blockquote>The for loop has some subtleties that you should learn in order to
make good use of it. First, all three expressions are evaluated once, before
the loop starts. [&#8230;] Second, the control variable is a local variable
automatically declared by the for statement and is visible only inside the
loop. [&#8230;] Third, you should never change the value of the control
variable.</blockquote>




<!--References-->



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Masterminds of Programming]]></title>
    <link href="http://aprell.github.io/blog/2014/10/11/masterminds-of-programming/"/>
    <updated>2014-10-11T17:19:43+02:00</updated>
    <id>http://aprell.github.io/blog/2014/10/11/masterminds-of-programming</id>
    <content type="html"><![CDATA[<p>A few interesting and amusing quotes from the book <a href="http://shop.oreilly.com/product/9780596515171.do">Masterminds of
Programming</a>:</p>

<!--more-->




<blockquote>Some 20 years ago I wanted to develop a tool to design VLSI chips.
I didn&#8217;t have a Forth for my new PC, so I thought I&#8217;d try a different
approach: machine language. Not assembler language, but actually typing the
hex instructions. [&#8230;] My conclusion was that Forth is more efficient than
machine language. Partly because of its interactivity and partly because of
its syntax.<br>&#8212;Charles Moore</blockquote>




<blockquote>My opinion is that OOP is one of the great frauds perpetrated on
the community. [&#8230;] OOP was designed so that its clients could claim superior
wisdom for being on the &#8220;inside&#8221;. The truth of the matter is that the single
most important aspect of OOP is an approach devised decades ago: encapsulation
of subroutines and data. All the rest is frosting.<br>&#8212;Thomas E.
Kurtz</blockquote>




<blockquote>The best way to avoid tough debugging is to write things very
carefully in the first place.<br>&#8212;Brian Kernighan</blockquote>




<blockquote>Software engineering is in many ways a very pathetic field,
because so much of it is anecdotal and based on people&#8217;s judgments or even
people&#8217;s aesthetic judgments.<br>&#8212;Peter Weinberger</blockquote>




<blockquote>C is a reasonably good language for compilers to generate, but the
idea that human beings should program in it is completely
absurd.<br>&#8212;Bertrand Meyer</blockquote>




<!--References-->



]]></content>
  </entry>
  
</feed>
